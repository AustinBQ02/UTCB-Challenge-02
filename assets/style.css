/* create custom CSS variables (also called custom properties) and apply them to the root of the page, making them accessible to all other CSS */
:root {
    /* declare a variable with `--` syntax */
    --dark: #13293d;
    --light: #fff;
    --navlink-color: white;
  }
  
  body {
    display: flex;
    flex-direction: column;
    line-height: 1.3;
    background-color: lightgray;
    align-items: center;
  }
  
  header {
    display: flex;
    flex-direction: column;
    /* padding-block: 2rem; */
    width: min(95%, 70rem);
    background-color: black;
    color: var(--light);
  }
  
  .header-bar {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 1%;
  }

  h1 {
    font-size: 200%;
  }
  
  h2 {
    margin: 2% 0;
    font-size: 250%;
  }
  
  a[href*='.css']::after {
    content: 'üìù';
    display: inline-block;
    margin-left: 3px;
  }
  
  nav ul {
    display: flex;
    justify-content: space-between;
    min-width: 300px;
  }
  
  nav a {
    background-color: unset;
    color: var(--navlink-color);
    font-weight: bold;
    text-decoration: none;
  }
  
  nav a:hover {
    color: #4165f3;
  }

  .hero-image {
    background-color: black;
    background-image: url("../assets/dark-cubes.jpg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
  }
  
  .hero-text {
    text-align: right;
    position: relative;
    color: white;
    padding-top: 150px;
    padding-bottom: 50px;
    padding-right:50px;
  }
  
img,
picture {
  max-width: 100%;
  display: block;
}

  /* giving grid a shot */
  main {
      display: grid;
      gap: 1.5rem;
      grid-template-columns: 1fr;
      grid-auto-columns: 1fr;
      /* areas for 3 content sections */
      grid-template-areas:
       'about'
       'work'
       'contact';
      padding-block: 2rem;
      width: min(95%, 70rem);
  }

/* assign grid areas to sections */
#about-me {
  grid-area: 1;
  display:grid;
  gap: 1.5rem;
  grid-template-columns: 1fr 2fr;
  grid-template-areas:
    "heading content";
}
#about-me-header {
  grid-area: heading;
}
#about-me-content {
  grid-area: content;
}

#my-work {
  grid-area: 2;
  display:grid;
  gap: 1.5rem;
  grid-template-columns: 1fr 2fr;
  grid-template-areas:
    "heading content";
}
#my-work-header {
  grid-area: heading;
}
#my-work-content {
  grid-area: content;
  display:grid;
  gap: 1.5rem;
  grid-template-columns: 1fr 1fr;
  /* First application should be larger in size */
  /* grid-template-areas: 
    "1 1"
    "1 1"
    "2 3"
    "4 5"; */
}
#proj1 {
  /* grid-area:1; */
  grid-column-start: span 2;
  grid-row-start: 1;
  /* height: 300px;
  width: 600px; */
}

#proj2 {
  /* grid-area:2; */
  grid-row-start: 2;
  grid-column-start: 1;
}

#proj3 {
  /* grid-area:3; */
  grid-row-start: 2;
  grid-column-start: 2;
}

#proj4 {
  /* grid-area:4; */
  grid-row-start: 3;
  grid-column-start: 1;
}

#proj5 {
  /* grid-area:5; */
  grid-row-start: 3;
  grid-column-start: 2;
}

#contact-me {
  grid-area: 3;
  display:grid;
  gap: 1.5rem;
  grid-template-columns: 1fr 2fr;
  grid-template-areas:
    "heading content";
}
#contact-me-header {
  grid-area: heading;
}
#contact-me-content {
  grid-area: content;
}





  footer {
    
    bottom: 0%;
    display: flex;
    justify-content: center;
    padding: 2%;
    width:100%;
    background-color: black;
    color: whitesmoke;
  }
  
  /* layout must be responsive */
  @media screen and (max-width: 768px) {
    header {
      flex-direction: column;
    }
  
    main {
      max-width: 1200px;
    }
  }